# vim:set sw=8 ts=8 noet:
#
# Copyright (c) 2016-2017 Torchbox Ltd.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely. This software is provided 'as-is', without any express or implied
# warranty.

TS_INCDIR=	@TS_INCDIR@
TS_PLUGINDIR=	@TS_PLUGINDIR@

ROOT=		@top_srcdir@

CC=		@CC@
CXX=		@CXX@
CPPFLAGS=	@LIBCURL_CPPFLAGS@	\
		@CPPFLAGS@		\
		-I${TS_INCDIR}		\
		-I.			\
		-I${ROOT}		\
		-I${ROOT}/gtest		\
		-I${ROOT}/gtest/include	\
		-I${ROOT}/api		\
		-I${ROOT}/auth		\
		-I${ROOT}/crypt		\
		-I${ROOT}/remap		\
		-I${ROOT}/tsapi		\
		-I${ROOT}/util		\
		-I${ROOT}/contrib/rax	\
		-I${ROOT}/contrib/brotli/include

JSON_CFLAGS=	@JSON_CFLAGS@
PTHREAD_LIBS=	@PTHREAD_LIBS@

CFLAGS=		@TS_CFLAGS@ @JSON_CFLAGS@ @PTHREAD_CFLAGS@ @CFLAGS@
CXXFLAGS=	@TS_CXXFLAGS@ @JSON_CFLAGS@ @CXXFLAGS@
LIBS=		@LIBS@ @LDFLAGS@ @JSON_LIBS@ @LIBCURL@

VPATH=		${ROOT}/crypt		\
		${ROOT}/util		\
		${ROOT}/api		\
		${ROOT}/auth		\
		${ROOT}/remap		\
		${ROOT}/tsapi		\
		${ROOT}/tests		\
		${ROOT}/contrib/rax	\
		${ROOT}/gtest/src

CRYPT_SRCS=	crypt.c		\
		crypt_des.c	\
		crypt_bf.c	\
		crypt_sha256.c	\
		crypt_sha512.c	\
		crypt_md5.c
CRYPT_OBJS=	${CRYPT_SRCS:.c=.o}

API_SRCS=	cluster.c	\
		ingress.c	\
		secret.c	\
		service.c	\
		endpoints.c	\
		namespace.c
API_OBJS=	${API_SRCS:.c=.o}

SRCS=		hash.c		\
		rax.c		\
		strmatch.c	\
		config.c	\
		watcher.c	\
		synth.c		\
		remap.c		\
		remap_db.c	\
		remap_build.c	\
		remap_path.c	\
		remap_host.c	\
		tls.c		\
		compress.c	\
		plugin.c	\
		debug.c		\
		base64.c	\
		auth.c		\
		${CRYPT_SRCS}	\
		${API_SRCS}
OBJS=		${SRCS:.c=.o}

TEST_SRCS=	ts_mockapi.cc		\
		test_support.cc		\
		test_auth.cc		\
		test_remap_db.cc	\
		test_api.cc		\
		test_base64.cc		\
		test_crypt.cc		\
		test_config.cc		\
		test_hash.cc

TEST_OBJS=	gtest-all.o		\
		gtest_main.o		\
		base64.o		\
		rax.o			\
		hash.o			\
		strmatch.o		\
		auth.o			\
		remap_db.o		\
		remap_path.o		\
		remap_host.o		\
		remap_build.o		\
		config.o		\
		${TEST_SRCS:.cc=.o}	\
		${API_OBJS}		\
		${CRYPT_OBJS}

all: kubernetes.so

kubernetes.so: ${OBJS}
	${MAKE} -C contrib/brotli libbrotli.a
	${CC} ${CFLAGS} ${LDFLAGS} -shared -o $@ ${OBJS} ${LIBS} -Lcontrib/brotli -lbrotli

test: ${TEST_OBJS} ${GTEST_OBJS}
	${CXX} ${CXXFLAGS} ${LDFLAGS} ${TEST_OBJS} ${GTEST_OBJS} -o test ${LIBS} ${PTHREAD_LIBS}
	./test

install: all
	install -d -m 0755 ${TS_PLUGINDIR}
	install -c -m 0755 kubernetes.so ${TS_PLUGINDIR}

%.o: %.c
	${CC} ${CPPFLAGS} ${CFLAGS} -c $<

%.o: %.cc
	${CXX} ${CPPFLAGS} ${CXXFLAGS} -c $<

lint: ${SRCS}
	${CC} ${CPPFLAGS} ${CFLAGS} --analyze $?

clean:
	rm -f kubernetes.so ${OBJS} ${TEST_OBJS} *.plist test
	${MAKE} -C contrib/brotli clean

depend: ${SRCS} ${TEST_SRCS}
	sed -e '/^# ADDED BY MAKE DEPEND -- DO NOT DELETE/,$$ d' < Makefile > Makefile.tmp
	echo '# ADDED BY MAKE DEPEND -- DO NOT DELETE' >> Makefile.tmp
	${CC} ${CPPFLAGS} ${JSON_CFLAGS} -MM $^ >> Makefile.tmp
	mv Makefile.tmp Makefile

docs:
	$(MAKE) -f Makefile.dist docs

.PHONY: test install clean depend lint docs
